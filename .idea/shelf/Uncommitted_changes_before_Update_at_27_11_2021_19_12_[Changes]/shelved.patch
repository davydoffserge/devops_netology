Index: README.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#devops-netology\r\n\r\n#1)cd встроенная команда, позволяет изменять каталоги \r\n\r\n# 2)сравнить строку с файлом и посчитать строки\r\n# grep 'some_string' some_file -c\r\n\r\n#3) процесс с PID = 1, является родителем всех процессов /sbin/init \r\n#ps -ef\r\n\r\n#4)перенаправление потока ошибок между терминальными сессиями \r\n\r\n#ls % 2>/dev/pts/2\r\n\r\n#5)создаем файл с данными для ввода через текстовый редактор nano serge.txt\r\n#cat <serge.txt> output.txt\r\n\r\n#7)/proc/N/fd - файловые дескрипторы, которые используются процессом.\r\n#bash 5>&1 перенаправит вывод  виртуального терминала №5 в первый\r\n#echo netology >/proc/$$/fd/5 выведет netology на экран, т.к. произошло перенаправление \r\n#в 5 и обратно\r\n\r\n\r\n#8)bash 5>&1\r\n#ls -test 2>&1 >/proc/$$/fd/6 | wc - l выводит на экран количесво строк в ошибке, не теряя вывод, т.е. = 2\r\n#иначе ls -l 2>&1 >/proc/$$/fd/6 | wc - l выведет на экран содержимое каталога, и количество ошибок = 0\r\n\r\n#9) cat /proc/$$/environ - описание окружения в котором запущен текущий процесс, \r\n#заменяем командой printenv возвращает данные в более читабельном виде\r\n\r\n#10)cat /proc/<PID>/cmdline - выводит содержимое командной строки, которой был запущен данный процесс\r\n#по PID=1942 выведем bash, /proc/<PID>/exe - ссылка на исполняемый бинарный файл\r\n\r\n#11) cat /proc/cpuinfo | grep sse - получим инцормацию со сравнением по sse, старшая версия 4.2\r\n\r\n#12)при вызове новой сессии терминала после соединения ssh -t localhost 'tty' вызывает ошибку после вызова пароля.\r\n#при вводе команды sudo lsof /dev/ptmx получим список куда можно перенаправить потоки стандартного ввода -вывода.\r\n\r\n#13)при первых запусках были ошибки на конфигурационный файл 10-patrace.conf. \r\n#изменил параметры на = 0, пользователь может отлаживать любые процессы, которые он запустил.\r\n#продолжает работу после закрытия терминала\r\n\r\n#14)Основное использование tee команды - отобразить стандартный вывод ( stdout ) программы и записать его в файл.\r\n#в данном примере команда получает вывод из stdin, перенаправленный через pipe от stdout команды echo\r\n#Использование tee в сочетании с sudo позволяет записывать в файлы, принадлежащие другим пользователям.\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/README.md b/README.md
--- a/README.md	
+++ b/README.md	
@@ -2,10 +2,12 @@
 
 #1)cd встроенная команда, позволяет изменять каталоги 
 
-# 2)сравнить строку с файлом и посчитать строки
-# grep 'some_string' some_file -c
+#2)сравнить строку с файлом и посчитать строки
+
+#grep 'some_string' some_file -c
 
-#3) процесс с PID = 1, является родителем всех процессов /sbin/init 
+#3)процесс с PID = 1, является родителем всех процессов /sbin/init 
+
 #ps -ef
 
 #4)перенаправление потока ошибок между терминальными сессиями 
@@ -13,35 +15,45 @@
 #ls % 2>/dev/pts/2
 
 #5)создаем файл с данными для ввода через текстовый редактор nano serge.txt
+
 #cat <serge.txt> output.txt
 
 #7)/proc/N/fd - файловые дескрипторы, которые используются процессом.
+
 #bash 5>&1 перенаправит вывод  виртуального терминала №5 в первый
+
 #echo netology >/proc/$$/fd/5 выведет netology на экран, т.к. произошло перенаправление 
+
 #в 5 и обратно
 
+#8)ls -l 5>&2 2>&1 1>&5 новый дескриптор направлякм в stderr, stderr перенаправляем в stdout.
 
-#8)bash 5>&1
-#ls -test 2>&1 >/proc/$$/fd/6 | wc - l выводит на экран количесво строк в ошибке, не теряя вывод, т.е. = 2
-#иначе ls -l 2>&1 >/proc/$$/fd/6 | wc - l выведет на экран содержимое каталога, и количество ошибок = 0
+#stdout - направляем в новый дескриптор.
 
 #9) cat /proc/$$/environ - описание окружения в котором запущен текущий процесс, 
+
 #заменяем командой printenv возвращает данные в более читабельном виде
 
 #10)cat /proc/<PID>/cmdline - выводит содержимое командной строки, которой был запущен данный процесс
+
 #по PID=1942 выведем bash, /proc/<PID>/exe - ссылка на исполняемый бинарный файл
 
 #11) cat /proc/cpuinfo | grep sse - получим инцормацию со сравнением по sse, старшая версия 4.2
 
-#12)при вызове новой сессии терминала после соединения ssh -t localhost 'tty' вызывает ошибку после вызова пароля.
-#при вводе команды sudo lsof /dev/ptmx получим список куда можно перенаправить потоки стандартного ввода -вывода.
+#12)используя команду ssh vagrant@localhost можно установить соединение к себе же (необходимо ввести пароль)
+
+#при вводе команды 'tty' увидим, что соответственно изменилось и имя.(/dev/pts/1)
 
 #13)при первых запусках были ошибки на конфигурационный файл 10-patrace.conf. 
+
 #изменил параметры на = 0, пользователь может отлаживать любые процессы, которые он запустил.
+
 #продолжает работу после закрытия терминала
 
 #14)Основное использование tee команды - отобразить стандартный вывод ( stdout ) программы и записать его в файл.
+
 #в данном примере команда получает вывод из stdin, перенаправленный через pipe от stdout команды echo
+
 #Использование tee в сочетании с sudo позволяет записывать в файлы, принадлежащие другим пользователям.
 
 
